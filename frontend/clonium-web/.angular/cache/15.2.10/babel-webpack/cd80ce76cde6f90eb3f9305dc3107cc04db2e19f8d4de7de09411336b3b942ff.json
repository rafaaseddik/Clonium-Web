{"ast":null,"code":"import Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../core/services/room.service\";\nimport * as i3 from \"../../core/services/game.service\";\nimport * as i4 from \"@angular/forms\";\n/**\n * @description\n * This screen to join an online room by the roomID\n *\n * @author\n * Rafaa Seddik\n */\nexport let JoinRoomComponent = /*#__PURE__*/(() => {\n  class JoinRoomComponent {\n    constructor(router, roomService, gameService) {\n      this.router = router;\n      this.roomService = roomService;\n      this.gameService = gameService;\n      // The input roomID value\n      this.roomID = \"\";\n    }\n    ngOnInit() {}\n    /**\n     * @description\n     * Checks if there is an available place in the room\n     * if successful, go to the online-room.component\n     * else, show an alert\n     *\n     * @author\n     * Rafaa Seddik\n     */\n    submit() {\n      this.roomService.joinRoom(this.roomID).then(result => {\n        this.gameService.joinOnlineBoard(result.mapName, result.playersNumber, result.currentPlayer, result.side);\n        this.router.navigate(['room/online']);\n      }).catch(e => {\n        Swal.fire({\n          html: 'Room not found',\n          icon: 'error'\n        });\n      });\n    }\n    static #_ = this.ɵfac = function JoinRoomComponent_Factory(t) {\n      return new (t || JoinRoomComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.RoomService), i0.ɵɵdirectiveInject(i3.GameService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: JoinRoomComponent,\n      selectors: [[\"app-join-room\"]],\n      decls: 9,\n      vars: 1,\n      consts: [[1, \"col-12\", \"text-center\", \"mt-5\", \"pt-5\", \"h-in-black\"], [\"src\", \"assets/img/LogoFinal.png\", \"width\", \"350\", 1, \"h-in-black\"], [1, \"col-12\", \"text-center\", \"mt-5\", \"pt-5\", \"d-in-black\"], [\"src\", \"assets/img/LogoFinalDark.png\", \"width\", \"350\", 1, \"d-in-black\"], [1, \"text-dark\", \"text-center\", \"mt-5\", \"font-weight-bold\"], [\"placeholder\", \"Room ID\", 1, \"form-control\", \"room-id-input\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-primary\", \"mt-2\", \"col-12\", 3, \"click\"]],\n      template: function JoinRoomComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵelement(1, \"img\", 1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"div\", 2);\n          i0.ɵɵelement(3, \"img\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"h1\", 4);\n          i0.ɵɵtext(5, \"Join Room\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"input\", 5);\n          i0.ɵɵlistener(\"ngModelChange\", function JoinRoomComponent_Template_input_ngModelChange_6_listener($event) {\n            return ctx.roomID = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"button\", 6);\n          i0.ɵɵlistener(\"click\", function JoinRoomComponent_Template_button_click_7_listener() {\n            return ctx.submit();\n          });\n          i0.ɵɵtext(8, \"Enter Room\");\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngModel\", ctx.roomID);\n        }\n      },\n      dependencies: [i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel],\n      encapsulation: 2\n    });\n  }\n  return JoinRoomComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}